name: main
on:
  workflow_dispatch:

  push:
    branches:
      - main
    paths:
      - "charts/**"

jobs:
  lint-chart:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run chart-testing (lint)
        uses: helm/chart-testing-action@main
        with:
          command: lint
          config: .github/config/ct.yaml

  kubeval-chart:
    name: Chart Validator
    runs-on: ubuntu-latest
    needs:
      - lint-chart
    strategy:
      matrix:
        k8s:
          - v1.16.8
          - v1.17.4
          - v1.20.15
          - v1.21.13
          - v1.22.10
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run kubeval
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
        run: .github/kubeval.sh

  # install-chart:
  #   name: install-chart
  #   runs-on: ubuntu-latest
  #   needs:
  #     - lint-chart
  #     - lint-docs
  #     - kubeval-chart
  #   strategy:
  #     matrix:
  #       k8s:
  #         - v1.12.10
  #         - v1.13.12
  #         - v1.14.10
  #         - v1.15.7
  #         - v1.16.4
  #         - v1.17.2
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Create kind ${{ matrix.k8s }} cluster
  #       uses: helm/kind-action@main
  #       with:
  #         node_image: kindest/node:${{ matrix.k8s }}
  #     - name: Run chart-testing (install)
  #       uses: helm/chart-testing-action@main
  #       with:
  #         command: install
  #         config: .github/ct.yaml


  release:
    runs-on: ubuntu-latest
    needs:
      - lint-chart
      - kubeval-chart
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Run chart-releaser
        uses: helm/chart-releaser-action@main
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'


  artifacts:
    runs-on: ubuntu-latest
    needs:
      - release
    steps:
      - name: checkout artifacts branch
        uses: actions/checkout@v3
        with:
          ref: artifacts
      - name: git setup
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - name: download artifacts
        run: |
          gh release list | awk '{print$1}' | while read line; do gh release download $line || true; done
          git add .
          git commit -m ":robot: [github actions actor] update artifact list"
          git push
      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.8.1
      - name: generate updated index.yaml
        run: |
          helm repo index . --url "https://raw.githubusercontent.com/devxp-tech/helm-charts/artifacts/"
      - name: persist index.yaml
        uses: actions/upload-artifact@v2
        with:
          name: gh-pages
          path: ./index.yaml
          if-no-files-found: error
  index:
    name: index-update
    runs-on: ubuntu-latest
    needs:
      - artifacts
    steps:
      - name: chekcout gh-pages
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: git setup
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token
      - uses: actions/download-artifact@v2
        with:
          name: gh-pages
      - name: commit new index.yaml
        run: |
          if [[ $(git diff) ]];
          then
            git add index.yaml
            git commit -m "[ci skip] :robot: [github actions actor] - update index.yaml"
            git push
          else
            echo "nothing to do!!!"
          fi

  generate-docs:
    runs-on: ubuntu-latest
    needs:
      - index
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Helm Docs
        uses: docker://jnorwood/helm-docs:v1.7.0
        with:
          entrypoint: /usr/bin/helm-docs
          args: --chart-search-root /github/workspace
      - name: commit changes
        uses: stefanzweifel/git-auto-commit-action@v4.13.1
        with:
          commit_message: "[skip ci] :robot: Update Docs :zap:"
          repository: .